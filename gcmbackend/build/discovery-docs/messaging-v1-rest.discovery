{
 "kind": "discovery#restDescription",
 "etag": "\"u_zXkMELIlX4ktyNbM2XKD4vK8E/xcFHxcmCSaECCZymLbreo_nA3Gg\"",
 "discoveryVersion": "v1",
 "id": "messaging:v1",
 "name": "messaging",
 "version": "v1",
 "description": "This is an API",
 "ownerDomain": "gcmbackend.bitefast.spandan.com",
 "ownerName": "gcmbackend.bitefast.spandan.com",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rest",
 "baseUrl": "https://expanded-symbol-98518.appspot.com/_ah/api/messaging/v1/",
 "basePath": "/_ah/api/messaging/v1/",
 "rootUrl": "https://expanded-symbol-98518.appspot.com/_ah/api/",
 "servicePath": "messaging/v1/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/userinfo.email": {
     "description": "View your email address"
    }
   }
  }
 },
 "schemas": {
  "User": {
   "id": "User",
   "type": "object",
   "properties": {
    "admin": {
     "type": "boolean"
    },
    "userNum": {
     "type": "string"
    }
   }
  }
 },
 "methods": {
  "insertUser": {
   "id": "messaging.insertUser",
   "path": "void/{regId}/{phoneNum}/{name}/{email}/{addr}/{street}/{landmark}/{city}/{isAdmin}",
   "httpMethod": "POST",
   "parameters": {
    "addr": {
     "type": "string",
     "required": true,
     "location": "path"
    },
    "city": {
     "type": "string",
     "required": true,
     "location": "path"
    },
    "email": {
     "type": "string",
     "required": true,
     "location": "path"
    },
    "isAdmin": {
     "type": "boolean",
     "required": true,
     "location": "path"
    },
    "landmark": {
     "type": "string",
     "required": true,
     "location": "path"
    },
    "name": {
     "type": "string",
     "required": true,
     "location": "path"
    },
    "phoneNum": {
     "type": "string",
     "required": true,
     "location": "path"
    },
    "regId": {
     "type": "string",
     "required": true,
     "location": "path"
    },
    "street": {
     "type": "string",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "regId",
    "phoneNum",
    "name",
    "email",
    "addr",
    "street",
    "landmark",
    "city",
    "isAdmin"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "isAdmin": {
   "id": "messaging.isAdmin",
   "path": "isAdmin/{phoneNo}",
   "httpMethod": "POST",
   "parameters": {
    "phoneNo": {
     "type": "string",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "phoneNo"
   ],
   "response": {
    "$ref": "User"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "register": {
   "id": "messaging.register",
   "path": "register/{regId}/{phn}",
   "httpMethod": "POST",
   "parameters": {
    "phn": {
     "type": "string",
     "required": true,
     "location": "path"
    },
    "regId": {
     "type": "string",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "regId",
    "phn"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "saveMessage": {
   "id": "messaging.saveMessage",
   "path": "saveMessage/{regId}/{from}/{to}/{message}",
   "httpMethod": "POST",
   "parameters": {
    "from": {
     "type": "string",
     "required": true,
     "location": "path"
    },
    "message": {
     "type": "string",
     "required": true,
     "location": "path"
    },
    "regId": {
     "type": "string",
     "required": true,
     "location": "path"
    },
    "to": {
     "type": "string",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "regId",
    "from",
    "to",
    "message"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "sendMessage": {
   "id": "messaging.sendMessage",
   "path": "sendMessage/{message}/{redId}",
   "httpMethod": "POST",
   "parameters": {
    "message": {
     "type": "string",
     "required": true,
     "location": "path"
    },
    "redId": {
     "type": "string",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "message",
    "redId"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  }
 }
}
