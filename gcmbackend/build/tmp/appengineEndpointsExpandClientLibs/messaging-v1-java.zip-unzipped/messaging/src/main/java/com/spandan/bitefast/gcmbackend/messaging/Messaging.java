/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-03-26 20:30:19 UTC)
 * on 2015-06-29 at 13:56:19 UTC 
 * Modify at your own risk.
 */

package com.spandan.bitefast.gcmbackend.messaging;

/**
 * Service definition for Messaging (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MessagingRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Messaging extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.20.0 of the messaging library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://expanded-symbol-98518.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "messaging/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Messaging(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Messaging(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "findUser".
   *
   * This request holds the parameters needed by the messaging server.  After setting any optional
   * parameters, call the {@link FindUser#execute()} method to invoke the remote operation.
   *
   * @param regid
   * @param phoneNo
   * @return the request
   */
  public FindUser findUser(java.lang.String regid, java.lang.String phoneNo) throws java.io.IOException {
    FindUser result = new FindUser(regid, phoneNo);
    initialize(result);
    return result;
  }

  public class FindUser extends MessagingRequest<Void> {

    private static final String REST_PATH = "findUser/{regid}/{phoneNo}";

    /**
     * Create a request for the method "findUser".
     *
     * This request holds the parameters needed by the the messaging server.  After setting any
     * optional parameters, call the {@link FindUser#execute()} method to invoke the remote operation.
     * <p> {@link
     * FindUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param regid
     * @param phoneNo
     * @since 1.13
     */
    protected FindUser(java.lang.String regid, java.lang.String phoneNo) {
      super(Messaging.this, "POST", REST_PATH, null, Void.class);
      this.regid = com.google.api.client.util.Preconditions.checkNotNull(regid, "Required parameter regid must be specified.");
      this.phoneNo = com.google.api.client.util.Preconditions.checkNotNull(phoneNo, "Required parameter phoneNo must be specified.");
    }

    @Override
    public FindUser setAlt(java.lang.String alt) {
      return (FindUser) super.setAlt(alt);
    }

    @Override
    public FindUser setFields(java.lang.String fields) {
      return (FindUser) super.setFields(fields);
    }

    @Override
    public FindUser setKey(java.lang.String key) {
      return (FindUser) super.setKey(key);
    }

    @Override
    public FindUser setOauthToken(java.lang.String oauthToken) {
      return (FindUser) super.setOauthToken(oauthToken);
    }

    @Override
    public FindUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (FindUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public FindUser setQuotaUser(java.lang.String quotaUser) {
      return (FindUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public FindUser setUserIp(java.lang.String userIp) {
      return (FindUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String regid;

    /**

     */
    public java.lang.String getRegid() {
      return regid;
    }

    public FindUser setRegid(java.lang.String regid) {
      this.regid = regid;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phoneNo;

    /**

     */
    public java.lang.String getPhoneNo() {
      return phoneNo;
    }

    public FindUser setPhoneNo(java.lang.String phoneNo) {
      this.phoneNo = phoneNo;
      return this;
    }

    @Override
    public FindUser set(String parameterName, Object value) {
      return (FindUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertAppUser".
   *
   * This request holds the parameters needed by the messaging server.  After setting any optional
   * parameters, call the {@link InsertAppUser#execute()} method to invoke the remote operation.
   *
   * @param regId
   * @param phoneNum
   * @param name
   * @param email
   * @param addr
   * @param street
   * @param landmark
   * @param city
   * @return the request
   */
  public InsertAppUser insertAppUser(java.lang.String regId, java.lang.String phoneNum, java.lang.String name, java.lang.String email, java.lang.String addr, java.lang.String street, java.lang.String landmark, java.lang.String city) throws java.io.IOException {
    InsertAppUser result = new InsertAppUser(regId, phoneNum, name, email, addr, street, landmark, city);
    initialize(result);
    return result;
  }

  public class InsertAppUser extends MessagingRequest<Void> {

    private static final String REST_PATH = "void/{regId}/{phoneNum}/{name}/{email}/{addr}/{street}/{landmark}/{city}";

    /**
     * Create a request for the method "insertAppUser".
     *
     * This request holds the parameters needed by the the messaging server.  After setting any
     * optional parameters, call the {@link InsertAppUser#execute()} method to invoke the remote
     * operation. <p> {@link InsertAppUser#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param regId
     * @param phoneNum
     * @param name
     * @param email
     * @param addr
     * @param street
     * @param landmark
     * @param city
     * @since 1.13
     */
    protected InsertAppUser(java.lang.String regId, java.lang.String phoneNum, java.lang.String name, java.lang.String email, java.lang.String addr, java.lang.String street, java.lang.String landmark, java.lang.String city) {
      super(Messaging.this, "POST", REST_PATH, null, Void.class);
      this.regId = com.google.api.client.util.Preconditions.checkNotNull(regId, "Required parameter regId must be specified.");
      this.phoneNum = com.google.api.client.util.Preconditions.checkNotNull(phoneNum, "Required parameter phoneNum must be specified.");
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.addr = com.google.api.client.util.Preconditions.checkNotNull(addr, "Required parameter addr must be specified.");
      this.street = com.google.api.client.util.Preconditions.checkNotNull(street, "Required parameter street must be specified.");
      this.landmark = com.google.api.client.util.Preconditions.checkNotNull(landmark, "Required parameter landmark must be specified.");
      this.city = com.google.api.client.util.Preconditions.checkNotNull(city, "Required parameter city must be specified.");
    }

    @Override
    public InsertAppUser setAlt(java.lang.String alt) {
      return (InsertAppUser) super.setAlt(alt);
    }

    @Override
    public InsertAppUser setFields(java.lang.String fields) {
      return (InsertAppUser) super.setFields(fields);
    }

    @Override
    public InsertAppUser setKey(java.lang.String key) {
      return (InsertAppUser) super.setKey(key);
    }

    @Override
    public InsertAppUser setOauthToken(java.lang.String oauthToken) {
      return (InsertAppUser) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertAppUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertAppUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertAppUser setQuotaUser(java.lang.String quotaUser) {
      return (InsertAppUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertAppUser setUserIp(java.lang.String userIp) {
      return (InsertAppUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String regId;

    /**

     */
    public java.lang.String getRegId() {
      return regId;
    }

    public InsertAppUser setRegId(java.lang.String regId) {
      this.regId = regId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phoneNum;

    /**

     */
    public java.lang.String getPhoneNum() {
      return phoneNum;
    }

    public InsertAppUser setPhoneNum(java.lang.String phoneNum) {
      this.phoneNum = phoneNum;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public InsertAppUser setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public InsertAppUser setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String addr;

    /**

     */
    public java.lang.String getAddr() {
      return addr;
    }

    public InsertAppUser setAddr(java.lang.String addr) {
      this.addr = addr;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String street;

    /**

     */
    public java.lang.String getStreet() {
      return street;
    }

    public InsertAppUser setStreet(java.lang.String street) {
      this.street = street;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String landmark;

    /**

     */
    public java.lang.String getLandmark() {
      return landmark;
    }

    public InsertAppUser setLandmark(java.lang.String landmark) {
      this.landmark = landmark;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String city;

    /**

     */
    public java.lang.String getCity() {
      return city;
    }

    public InsertAppUser setCity(java.lang.String city) {
      this.city = city;
      return this;
    }

    @Override
    public InsertAppUser set(String parameterName, Object value) {
      return (InsertAppUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertUser".
   *
   * This request holds the parameters needed by the messaging server.  After setting any optional
   * parameters, call the {@link InsertUser#execute()} method to invoke the remote operation.
   *
   * @param phoneNum
   * @param isAdmin
   * @return the request
   */
  public InsertUser insertUser(java.lang.String phoneNum, java.lang.Boolean isAdmin) throws java.io.IOException {
    InsertUser result = new InsertUser(phoneNum, isAdmin);
    initialize(result);
    return result;
  }

  public class InsertUser extends MessagingRequest<Void> {

    private static final String REST_PATH = "void/{phoneNum}/{isAdmin}";

    /**
     * Create a request for the method "insertUser".
     *
     * This request holds the parameters needed by the the messaging server.  After setting any
     * optional parameters, call the {@link InsertUser#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param phoneNum
     * @param isAdmin
     * @since 1.13
     */
    protected InsertUser(java.lang.String phoneNum, java.lang.Boolean isAdmin) {
      super(Messaging.this, "POST", REST_PATH, null, Void.class);
      this.phoneNum = com.google.api.client.util.Preconditions.checkNotNull(phoneNum, "Required parameter phoneNum must be specified.");
      this.isAdmin = com.google.api.client.util.Preconditions.checkNotNull(isAdmin, "Required parameter isAdmin must be specified.");
    }

    @Override
    public InsertUser setAlt(java.lang.String alt) {
      return (InsertUser) super.setAlt(alt);
    }

    @Override
    public InsertUser setFields(java.lang.String fields) {
      return (InsertUser) super.setFields(fields);
    }

    @Override
    public InsertUser setKey(java.lang.String key) {
      return (InsertUser) super.setKey(key);
    }

    @Override
    public InsertUser setOauthToken(java.lang.String oauthToken) {
      return (InsertUser) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertUser setQuotaUser(java.lang.String quotaUser) {
      return (InsertUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertUser setUserIp(java.lang.String userIp) {
      return (InsertUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String phoneNum;

    /**

     */
    public java.lang.String getPhoneNum() {
      return phoneNum;
    }

    public InsertUser setPhoneNum(java.lang.String phoneNum) {
      this.phoneNum = phoneNum;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean isAdmin;

    /**

     */
    public java.lang.Boolean getIsAdmin() {
      return isAdmin;
    }

    public InsertUser setIsAdmin(java.lang.Boolean isAdmin) {
      this.isAdmin = isAdmin;
      return this;
    }

    @Override
    public InsertUser set(String parameterName, Object value) {
      return (InsertUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "sendMessage".
   *
   * This request holds the parameters needed by the messaging server.  After setting any optional
   * parameters, call the {@link SendMessage#execute()} method to invoke the remote operation.
   *
   * @param message
   * @param redId
   * @return the request
   */
  public SendMessage sendMessage(java.lang.String message, java.lang.String redId) throws java.io.IOException {
    SendMessage result = new SendMessage(message, redId);
    initialize(result);
    return result;
  }

  public class SendMessage extends MessagingRequest<Void> {

    private static final String REST_PATH = "sendMessage/{message}/{redId}";

    /**
     * Create a request for the method "sendMessage".
     *
     * This request holds the parameters needed by the the messaging server.  After setting any
     * optional parameters, call the {@link SendMessage#execute()} method to invoke the remote
     * operation. <p> {@link
     * SendMessage#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param message
     * @param redId
     * @since 1.13
     */
    protected SendMessage(java.lang.String message, java.lang.String redId) {
      super(Messaging.this, "POST", REST_PATH, null, Void.class);
      this.message = com.google.api.client.util.Preconditions.checkNotNull(message, "Required parameter message must be specified.");
      this.redId = com.google.api.client.util.Preconditions.checkNotNull(redId, "Required parameter redId must be specified.");
    }

    @Override
    public SendMessage setAlt(java.lang.String alt) {
      return (SendMessage) super.setAlt(alt);
    }

    @Override
    public SendMessage setFields(java.lang.String fields) {
      return (SendMessage) super.setFields(fields);
    }

    @Override
    public SendMessage setKey(java.lang.String key) {
      return (SendMessage) super.setKey(key);
    }

    @Override
    public SendMessage setOauthToken(java.lang.String oauthToken) {
      return (SendMessage) super.setOauthToken(oauthToken);
    }

    @Override
    public SendMessage setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SendMessage) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SendMessage setQuotaUser(java.lang.String quotaUser) {
      return (SendMessage) super.setQuotaUser(quotaUser);
    }

    @Override
    public SendMessage setUserIp(java.lang.String userIp) {
      return (SendMessage) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String message;

    /**

     */
    public java.lang.String getMessage() {
      return message;
    }

    public SendMessage setMessage(java.lang.String message) {
      this.message = message;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String redId;

    /**

     */
    public java.lang.String getRedId() {
      return redId;
    }

    public SendMessage setRedId(java.lang.String redId) {
      this.redId = redId;
      return this;
    }

    @Override
    public SendMessage set(String parameterName, Object value) {
      return (SendMessage) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Messaging}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Messaging}. */
    @Override
    public Messaging build() {
      return new Messaging(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MessagingRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMessagingRequestInitializer(
        MessagingRequestInitializer messagingRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(messagingRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
